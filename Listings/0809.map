Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    port.o(.ARM.exidx.text.prvStartFirstTask) refers to port.o(.text.prvStartFirstTask) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to task.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimeInterrupt) for vPortSetupTimeInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvStartFirstTask) for prvStartFirstTask
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortSetupTimeInterrupt) refers to port.o(.text.vPortSetupTimeInterrupt) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to task.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to task.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.text.vPortRaiseBASEPRI) for vPortRaiseBASEPRI
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.vPortEnterCritical) refers to port.o(.rodata.str1.1) for .L.str
    port.o(.text.vPortEnterCritical) refers to assert.o(.text) for __aeabi_assert
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortRaiseBASEPRI) refers to port.o(.text.vPortRaiseBASEPRI) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.vPortExitCritical) refers to port.o(.text.vPortSetBASEPRI) for vPortSetBASEPRI
    port.o(.text.vPortExitCritical) refers to port.o(.rodata.str1.1) for .L.str.1
    port.o(.text.vPortExitCritical) refers to assert.o(.text) for __aeabi_assert
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortSetBASEPRI) refers to port.o(.text.vPortSetBASEPRI) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to port.o(.text.vPortRaiseBASEPRI) for vPortRaiseBASEPRI
    port.o(.text.SysTick_Handler) refers to task.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.text.SysTick_Handler) refers to port.o(.text.vPortSetBASEPRI) for vPortSetBASEPRI
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.ulPortRaiseBASEPRI) refers to port.o(.text.ulPortRaiseBASEPRI) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.HardWareInit) refers to main.o(.text.HardWareInit) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.RTOSInit) refers to main.o(.text.RTOSInit) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.RTOSStart) refers to main.o(.text.RTOSStart) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.DoSomething1) refers to main.o(.text.DoSomething1) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.DoSomething2) refers to main.o(.text.DoSomething2) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.DoSomething3) refers to main.o(.text.DoSomething3) for [Anonymous Symbol]
    main.o(.text.main) refers to task.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    main.o(.text.main) refers to main.o(.bss.Task1Stack) for Task1Stack
    main.o(.text.main) refers to main.o(.bss.Task1TCB) for Task1TCB
    main.o(.text.main) refers to main.o(.text.Task1_Entry) for Task1_Entry
    main.o(.text.main) refers to task.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    main.o(.text.main) refers to main.o(.bss.Task1_Handle) for Task1_Handle
    main.o(.text.main) refers to main.o(.bss.Task2Stack) for Task2Stack
    main.o(.text.main) refers to main.o(.bss.Task2TCB) for Task2TCB
    main.o(.text.main) refers to main.o(.text.Task2_Entry) for Task2_Entry
    main.o(.text.main) refers to main.o(.bss.Task2_Handle) for Task2_Handle
    main.o(.text.main) refers to task.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.Task1_Entry) refers to main.o(.bss.flag1) for flag1
    main.o(.text.Task1_Entry) refers to task.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.Task1_Entry) refers to main.o(.text.Task1_Entry) for [Anonymous Symbol]
    main.o(.text.Task2_Entry) refers to main.o(.bss.flag2) for flag2
    main.o(.text.Task2_Entry) refers to task.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.Task2_Entry) refers to main.o(.text.Task2_Entry) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialistItem) refers to list.o(.text.vListInitialistItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListDelet) refers to list.o(.text.vListDelet) for [Anonymous Symbol]
    task.o(.text.prvInitialiseTaskLists) refers to task.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    task.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    task.o(.text.prvInitialiseTaskLists) refers to task.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    task.o(.text.prvInitialiseTaskLists) refers to task.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    task.o(.text.prvInitialiseTaskLists) refers to task.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    task.o(.text.prvInitialiseTaskLists) refers to task.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    task.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to task.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    task.o(.text.vTaskStartScheduler) refers to task.o(.text.vApplicationGetIdleTaskMemory) for vApplicationGetIdleTaskMemory
    task.o(.text.vTaskStartScheduler) refers to task.o(.text.prvIdleTask) for prvIdleTask
    task.o(.text.vTaskStartScheduler) refers to task.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    task.o(.text.vTaskStartScheduler) refers to main.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    task.o(.text.vTaskStartScheduler) refers to task.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    task.o(.text.vTaskStartScheduler) refers to port.o(.bss.xTickCount) for xTickCount
    task.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    task.o(.ARM.exidx.text.vTaskStartScheduler) refers to task.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    task.o(.text.vApplicationGetIdleTaskMemory) refers to main.o(.bss.IdleTaskTCB) for IdleTaskTCB
    task.o(.text.vApplicationGetIdleTaskMemory) refers to task.o(.bss.IdleTaskStack) for IdleTaskStack
    task.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory) refers to task.o(.text.vApplicationGetIdleTaskMemory) for [Anonymous Symbol]
    task.o(.text.xTaskCreateStatic) refers to task.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    task.o(.text.xTaskCreateStatic) refers to task.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    task.o(.ARM.exidx.text.xTaskCreateStatic) refers to task.o(.text.xTaskCreateStatic) for [Anonymous Symbol]
    task.o(.ARM.exidx.text.prvIdleTask) refers to task.o(.text.prvIdleTask) for [Anonymous Symbol]
    task.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialistItem) for vListInitialistItem
    task.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    task.o(.ARM.exidx.text.prvInitialiseNewTask) refers to task.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    task.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    task.o(.text.prvAddNewTaskToReadyList) refers to task.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    task.o(.text.prvAddNewTaskToReadyList) refers to task.o(.bss.pxCurrentTCB) for pxCurrentTCB
    task.o(.text.prvAddNewTaskToReadyList) refers to task.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    task.o(.text.prvAddNewTaskToReadyList) refers to task.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    task.o(.text.prvAddNewTaskToReadyList) refers to task.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    task.o(.text.prvAddNewTaskToReadyList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    task.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    task.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to task.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    task.o(.text.vTaskSwitchContext) refers to task.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    task.o(.text.vTaskSwitchContext) refers to task.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    task.o(.text.vTaskSwitchContext) refers to task.o(.bss.pxCurrentTCB) for pxCurrentTCB
    task.o(.ARM.exidx.text.vTaskSwitchContext) refers to task.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    task.o(.ARM.exidx.text.delay) refers to task.o(.text.delay) for [Anonymous Symbol]
    task.o(.text.vTaskDelay) refers to task.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    task.o(.ARM.exidx.text.vTaskDelay) refers to task.o(.text.vTaskDelay) for [Anonymous Symbol]
    task.o(.text.prvAddCurrentTaskToDelayedList) refers to task.o(.bss.pxCurrentTCB) for pxCurrentTCB
    task.o(.text.prvAddCurrentTaskToDelayedList) refers to port.o(.bss.xTickCount) for xTickCount
    task.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListDelet) for vListDelet
    task.o(.text.prvAddCurrentTaskToDelayedList) refers to task.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    task.o(.text.prvAddCurrentTaskToDelayedList) refers to task.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    task.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    task.o(.text.prvAddCurrentTaskToDelayedList) refers to task.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    task.o(.text.prvAddCurrentTaskToDelayedList) refers to task.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    task.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to task.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    task.o(.text.xTaskIncrementTick) refers to port.o(.bss.xTickCount) for xTickCount
    task.o(.text.xTaskIncrementTick) refers to task.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    task.o(.text.xTaskIncrementTick) refers to task.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    task.o(.text.xTaskIncrementTick) refers to task.o(.bss.xNumOfOverflows) for xNumOfOverflows
    task.o(.text.xTaskIncrementTick) refers to task.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    task.o(.text.xTaskIncrementTick) refers to task.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    task.o(.text.xTaskIncrementTick) refers to task.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    task.o(.text.xTaskIncrementTick) refers to task.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    task.o(.text.xTaskIncrementTick) refers to list.o(.text.vListDelet) for vListDelet
    task.o(.text.xTaskIncrementTick) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    task.o(.ARM.exidx.text.xTaskIncrementTick) refers to task.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    task.o(.text.prvResetNextTaskUnblockTime) refers to task.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    task.o(.text.prvResetNextTaskUnblockTime) refers to task.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    task.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to task.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    startup_armcm3.o(.ARM.exidx.text.Default_Handler) refers to startup_armcm3.o(.text.Default_Handler) for [Anonymous Symbol]
    startup_armcm3.o(.text.Reset_Handler) refers to system_armcm3.o(.text.SystemInit) for SystemInit
    startup_armcm3.o(.text.Reset_Handler) refers to __main.o(!!!main) for __main
    startup_armcm3.o(.ARM.exidx.text.Reset_Handler) refers to startup_armcm3.o(.text.Reset_Handler) for [Anonymous Symbol]
    startup_armcm3.o(.ARM.exidx.text.HardFault_Handler) refers to startup_armcm3.o(.text.HardFault_Handler) for [Anonymous Symbol]
    startup_armcm3.o(RESET) refers to startup_armcm3.o(.text.Reset_Handler) for Reset_Handler
    startup_armcm3.o(RESET) refers to startup_armcm3.o(.text.Default_Handler) for NMI_Handler
    startup_armcm3.o(RESET) refers to startup_armcm3.o(.text.HardFault_Handler) for HardFault_Handler
    startup_armcm3.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_armcm3.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_armcm3.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    system_armcm3.o(.text.SystemCoreClockUpdate) refers to system_armcm3.o(.data.SystemCoreClock) for SystemCoreClock
    system_armcm3.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_armcm3.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_armcm3.o(.text.SystemInit) refers to startup_armcm3.o(RESET) for __Vectors
    system_armcm3.o(.text.SystemInit) refers to system_armcm3.o(.data.SystemCoreClock) for SystemCoreClock
    system_armcm3.o(.ARM.exidx.text.SystemInit) refers to system_armcm3.o(.text.SystemInit) for [Anonymous Symbol]
    assert.o(.text) refers to assert_puts.o(.text) for __assert_puts
    assert.o(.text) refers to abort.o(.text) for abort
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry7.o(.ARM.Collect$$rtentry$$00000007) for __rt_entry_sh
    abort.o(.text) refers to defsig_abrt_outer.o(.text) for __rt_SIGABRT
    abort.o(.text) refers (Weak) to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    abort.o(.text) refers to sys_exit.o(.text) for _sys_exit
    assert_puts.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    __rtentry7.o(.ARM.Collect$$rtentry$$00000007) refers to __rtentry7.o(.ARM.Collect$$rtentry$$00002718) for __lit__00000000
    __rtentry7.o(__vectab_stack_and_reset_2_area) refers to __main.o(!!!main) for __main
    __rtentry7.o(.ARM.exidx) refers to __rtentry7.o(.ARM.Collect$$rtentry$$00000007) for .ARM.Collect$$rtentry$$00000007
    __rtentry7.o(.ARM.exidx) refers to __rtentry7.o(.ARM.Collect$$rtentry$$00002718) for .ARM.Collect$$rtentry$$00002718
    defsig_abrt_outer.o(.text) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig_abrt_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_abrt_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to sys_stackheap.o(.text) for __user_initial_stackheap
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_stackheap.o(.text) refers to use_no_semi.o(.text) for __I$use$semihosting
    sys_stackheap_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_stackheap_hlt.o(.text) refers to use_no_semi.o(.text) for __I$use$semihosting
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    defsig.o(CL$$defsig) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise


==============================================================================

Removing Unused input sections from the image.

    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.prvStartFirstTask), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimeInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortRaiseBASEPRI), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetBASEPRI), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.text.ulPortRaiseBASEPRI), (20 bytes).
    Removing port.o(.ARM.exidx.text.ulPortRaiseBASEPRI), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.text.HardWareInit), (2 bytes).
    Removing main.o(.ARM.exidx.text.HardWareInit), (8 bytes).
    Removing main.o(.text.RTOSInit), (2 bytes).
    Removing main.o(.ARM.exidx.text.RTOSInit), (8 bytes).
    Removing main.o(.text.RTOSStart), (2 bytes).
    Removing main.o(.ARM.exidx.text.RTOSStart), (8 bytes).
    Removing main.o(.text.DoSomething1), (2 bytes).
    Removing main.o(.ARM.exidx.text.DoSomething1), (8 bytes).
    Removing main.o(.text.DoSomething2), (2 bytes).
    Removing main.o(.ARM.exidx.text.DoSomething2), (8 bytes).
    Removing main.o(.text.DoSomething3), (2 bytes).
    Removing main.o(.ARM.exidx.text.DoSomething3), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.Task1_Entry), (8 bytes).
    Removing main.o(.ARM.exidx.text.Task2_Entry), (8 bytes).
    Removing main.o(.bss.flag3), (1 bytes).
    Removing main.o(.bss.List_Test), (20 bytes).
    Removing main.o(.bss.List_Item1), (20 bytes).
    Removing main.o(.bss.List_Item2), (20 bytes).
    Removing main.o(.bss.List_Item3), (20 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialistItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListDelet), (8 bytes).
    Removing task.o(.text), (0 bytes).
    Removing task.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing task.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing task.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory), (8 bytes).
    Removing task.o(.ARM.exidx.text.xTaskCreateStatic), (8 bytes).
    Removing task.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing task.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing task.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing task.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing task.o(.text.delay), (2 bytes).
    Removing task.o(.ARM.exidx.text.delay), (8 bytes).
    Removing task.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing task.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing task.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing task.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing startup_armcm3.o(.text), (0 bytes).
    Removing startup_armcm3.o(.ARM.exidx.text.Default_Handler), (8 bytes).
    Removing startup_armcm3.o(.ARM.exidx.text.Reset_Handler), (8 bytes).
    Removing startup_armcm3.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing system_armcm3.o(.text), (0 bytes).
    Removing system_armcm3.o(.text.SystemCoreClockUpdate), (20 bytes).
    Removing system_armcm3.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_armcm3.o(.ARM.exidx.text.SystemInit), (8 bytes).

66 unused section(s) (total 499 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry7.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/assert.c                         0x00000000   Number         0  assert.o ABSOLUTE
    ../clib/assert.c                         0x00000000   Number         0  assert_puts.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  abort.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    __tagsym$$used.0                         0x00000000   Number         0  startup_armcm3.o(RESET)
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    startup_ARMCM3.c                         0x00000000   Number         0  startup_armcm3.o ABSOLUTE
    system_ARMCM3.c                          0x00000000   Number         0  system_armcm3.o ABSOLUTE
    task.c                                   0x00000000   Number         0  task.o ABSOLUTE
    !!!main                                  0x000003c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x000003c8   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x000003fc   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x00000418   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x00000434   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000436   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x00000436   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x00000438   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0000043a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0000043a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0000043a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0000043a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0000043a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0000043a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0000043a   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0000043c   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0000043c   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000007          0x0000043c   Section        4  __rtentry7.o(.ARM.Collect$$rtentry$$00000007)
    .ARM.Collect$$rtentry$$00000009          0x00000440   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x00000440   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000444   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000444   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __lit__00000000                          0x0000044c   Data           4  __rtentry7.o(.ARM.Collect$$rtentry$$00002718)
    .ARM.Collect$$rtentry$$00002718          0x0000044c   Section        4  __rtentry7.o(.ARM.Collect$$rtentry$$00002718)
    .ARM.Collect$$rtexit$$00000000           0x00000450   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000452   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000452   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000456   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x0000045c   Section        0  assert.o(.text)
    .text                                    0x000004dc   Section        0  abort.o(.text)
    .text                                    0x000004f2   Section        0  assert_puts.o(.text)
    .text                                    0x00000506   Section        0  sys_wrch.o(.text)
    .text                                    0x00000514   Section        0  sys_exit.o(.text)
    .text                                    0x00000520   Section        0  defsig_abrt_outer.o(.text)
    .text                                    0x0000052e   Section        2  use_no_semi.o(.text)
    .text                                    0x00000530   Section        0  indicate_semi.o(.text)
    .text                                    0x00000530   Section        0  exit.o(.text)
    .text                                    0x00000542   Section        0  defsig_exit.o(.text)
    .text                                    0x0000054c   Section        0  defsig_abrt_inner.o(.text)
    .text                                    0x0000057c   Section        0  defsig_general.o(.text)
    [Anonymous Symbol]                       0x000005b0   Section        0  startup_armcm3.o(.text.Default_Handler)
    [Anonymous Symbol]                       0x000005b4   Section        0  startup_armcm3.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x000005b8   Section        0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00000608   Section        0  startup_armcm3.o(.text.Reset_Handler)
    [Anonymous Symbol]                       0x00000610   Section        0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00000638   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000648   Section        0  system_armcm3.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00000670   Section        0  main.o(.text.Task1_Entry)
    [Anonymous Symbol]                       0x00000690   Section        0  main.o(.text.Task2_Entry)
    [Anonymous Symbol]                       0x000006b0   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x0000073d   Thumb Code   118  task.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x0000073c   Section        0  task.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x000007b5   Thumb Code   106  task.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x000007b4   Section        0  task.o(.text.prvAddNewTaskToReadyList)
    prvIdleTask                              0x00000821   Thumb Code     2  task.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x00000820   Section        0  task.o(.text.prvIdleTask)
    prvInitialiseNewTask                     0x00000825   Thumb Code   100  task.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x00000824   Section        0  task.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x00000888   Section        0  task.o(.text.prvInitialiseTaskLists)
    prvResetNextTaskUnblockTime              0x000008d5   Thumb Code    40  task.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x000008d4   Section        0  task.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x000008fc   Section        0  port.o(.text.prvStartFirstTask)
    prvTaskExitError                         0x00000921   Thumb Code     2  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00000920   Section        0  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00000924   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00000944   Section        0  task.o(.text.vApplicationGetIdleTaskMemory)
    [Anonymous Symbol]                       0x00000960   Section        0  list.o(.text.vListDelet)
    [Anonymous Symbol]                       0x00000984   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00000998   Section        0  list.o(.text.vListInitialistItem)
    [Anonymous Symbol]                       0x000009a0   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x000009e0   Section        0  list.o(.text.vListInsertEnd)
    [Anonymous Symbol]                       0x000009fc   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00000a3c   Section        0  port.o(.text.vPortExitCritical)
    vPortRaiseBASEPRI                        0x00000a7d   Thumb Code    16  port.o(.text.vPortRaiseBASEPRI)
    [Anonymous Symbol]                       0x00000a7c   Section        0  port.o(.text.vPortRaiseBASEPRI)
    vPortSetBASEPRI                          0x00000a8d   Thumb Code     8  port.o(.text.vPortSetBASEPRI)
    [Anonymous Symbol]                       0x00000a8c   Section        0  port.o(.text.vPortSetBASEPRI)
    [Anonymous Symbol]                       0x00000a94   Section        0  port.o(.text.vPortSetupTimeInterrupt)
    [Anonymous Symbol]                       0x00000aac   Section        0  task.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x00000acc   Section        0  task.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x00000b30   Section        0  task.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00000b74   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00000b9c   Section        0  task.o(.text.xTaskCreateStatic)
    [Anonymous Symbol]                       0x00000bcc   Section        0  task.o(.text.xTaskIncrementTick)
    .L.str                                   0x00000ca0   Data          67  port.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00000ca0   Section        0  port.o(.rodata.str1.1)
    .L.str.1                                 0x00000ce3   Data          11  port.o(.rodata.str1.1)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    pxDelayedTaskList                        0x200006b4   Data           4  task.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x200006b4   Section        0  task.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x200006b8   Data           4  task.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200006b8   Section        0  task.o(.bss.pxOverflowDelayedTaskList)
    uxCurrentNumberOfTasks                   0x20000720   Data           4  task.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20000720   Section        0  task.o(.bss.uxCurrentNumberOfTasks)
    uxTopReadyPriority                       0x20000724   Data           4  task.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20000724   Section        0  task.o(.bss.uxTopReadyPriority)
    xDelayedTaskList1                        0x20000728   Data          20  task.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20000728   Section        0  task.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x2000073c   Data          20  task.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x2000073c   Section        0  task.o(.bss.xDelayedTaskList2)
    xNextTaskUnblockTime                     0x20000754   Data           4  task.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20000754   Section        0  task.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20000758   Data           4  task.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20000758   Section        0  task.o(.bss.xNumOfOverflows)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data         960  startup_armcm3.o(RESET)
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    Image$$ZI$$Limit                          - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __main                                   0x000003c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x000003c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x000003c9   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x000003c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x000003d7   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x000003fd   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x00000419   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x00000435   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x00000437   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x00000439   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0000043b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0000043b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0000043b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0000043b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0000043b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0000043b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0000043b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0000043d   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0000043d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0000043d   Thumb Code     0  __rtentry7.o(.ARM.Collect$$rtentry$$00000007)
    __rt_entry_li                            0x00000441   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x00000441   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x00000445   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000445   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x00000451   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000453   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000453   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000457   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_assert                           0x0000045d   Thumb Code    86  assert.o(.text)
    __assert                                 0x0000045d   Thumb Code     0  assert.o(.text)
    abort                                    0x000004dd   Thumb Code    22  abort.o(.text)
    __assert_puts                            0x000004f3   Thumb Code    20  assert_puts.o(.text)
    _ttywrch                                 0x00000507   Thumb Code    14  sys_wrch.o(.text)
    _sys_exit                                0x00000515   Thumb Code     8  sys_exit.o(.text)
    __rt_SIGABRT                             0x00000521   Thumb Code    14  defsig_abrt_outer.o(.text)
    __I$use$semihosting                      0x0000052f   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x0000052f   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x00000531   Thumb Code     0  indicate_semi.o(.text)
    exit                                     0x00000531   Thumb Code    18  exit.o(.text)
    __sig_exit                               0x00000543   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGABRT_inner                       0x0000054d   Thumb Code    14  defsig_abrt_inner.o(.text)
    __default_signal_display                 0x0000057d   Thumb Code    50  defsig_general.o(.text)
    BusFault_Handler                         0x000005b1   Thumb Code     2  startup_armcm3.o(.text.Default_Handler)
    DebugMon_Handler                         0x000005b1   Thumb Code     2  startup_armcm3.o(.text.Default_Handler)
    Default_Handler                          0x000005b1   Thumb Code     2  startup_armcm3.o(.text.Default_Handler)
    Interrupt0_Handler                       0x000005b1   Thumb Code     2  startup_armcm3.o(.text.Default_Handler)
    Interrupt1_Handler                       0x000005b1   Thumb Code     2  startup_armcm3.o(.text.Default_Handler)
    Interrupt2_Handler                       0x000005b1   Thumb Code     2  startup_armcm3.o(.text.Default_Handler)
    Interrupt3_Handler                       0x000005b1   Thumb Code     2  startup_armcm3.o(.text.Default_Handler)
    Interrupt4_Handler                       0x000005b1   Thumb Code     2  startup_armcm3.o(.text.Default_Handler)
    Interrupt5_Handler                       0x000005b1   Thumb Code     2  startup_armcm3.o(.text.Default_Handler)
    Interrupt6_Handler                       0x000005b1   Thumb Code     2  startup_armcm3.o(.text.Default_Handler)
    Interrupt7_Handler                       0x000005b1   Thumb Code     2  startup_armcm3.o(.text.Default_Handler)
    Interrupt8_Handler                       0x000005b1   Thumb Code     2  startup_armcm3.o(.text.Default_Handler)
    Interrupt9_Handler                       0x000005b1   Thumb Code     2  startup_armcm3.o(.text.Default_Handler)
    MemManage_Handler                        0x000005b1   Thumb Code     2  startup_armcm3.o(.text.Default_Handler)
    NMI_Handler                              0x000005b1   Thumb Code     2  startup_armcm3.o(.text.Default_Handler)
    UsageFault_Handler                       0x000005b1   Thumb Code     2  startup_armcm3.o(.text.Default_Handler)
    HardFault_Handler                        0x000005b5   Thumb Code     2  startup_armcm3.o(.text.HardFault_Handler)
    PendSV_Handler                           0x000005b9   Thumb Code    76  port.o(.text.PendSV_Handler)
    Reset_Handler                            0x00000609   Thumb Code     8  startup_armcm3.o(.text.Reset_Handler)
    SVC_Handler                              0x00000611   Thumb Code    34  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x00000639   Thumb Code    16  port.o(.text.SysTick_Handler)
    SystemInit                               0x00000649   Thumb Code    38  system_armcm3.o(.text.SystemInit)
    Task1_Entry                              0x00000671   Thumb Code    30  main.o(.text.Task1_Entry)
    Task2_Entry                              0x00000691   Thumb Code    30  main.o(.text.Task2_Entry)
    main                                     0x000006b1   Thumb Code   124  main.o(.text.main)
    prvInitialiseTaskLists                   0x00000889   Thumb Code    74  task.o(.text.prvInitialiseTaskLists)
    prvStartFirstTask                        0x000008fd   Thumb Code    30  port.o(.text.prvStartFirstTask)
    pxPortInitialiseStack                    0x00000925   Thumb Code    32  port.o(.text.pxPortInitialiseStack)
    vApplicationGetIdleTaskMemory            0x00000945   Thumb Code    26  task.o(.text.vApplicationGetIdleTaskMemory)
    vListDelet                               0x00000961   Thumb Code    36  list.o(.text.vListDelet)
    vListInitialise                          0x00000985   Thumb Code    20  list.o(.text.vListInitialise)
    vListInitialistItem                      0x00000999   Thumb Code     6  list.o(.text.vListInitialistItem)
    vListInsert                              0x000009a1   Thumb Code    64  list.o(.text.vListInsert)
    vListInsertEnd                           0x000009e1   Thumb Code    26  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x000009fd   Thumb Code    62  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00000a3d   Thumb Code    44  port.o(.text.vPortExitCritical)
    vPortSetupTimeInterrupt                  0x00000a95   Thumb Code    24  port.o(.text.vPortSetupTimeInterrupt)
    vTaskDelay                               0x00000aad   Thumb Code    30  task.o(.text.vTaskDelay)
    vTaskStartScheduler                      0x00000acd   Thumb Code    92  task.o(.text.vTaskStartScheduler)
    vTaskSwitchContext                       0x00000b31   Thumb Code    68  task.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x00000b75   Thumb Code    38  port.o(.text.xPortStartScheduler)
    xTaskCreateStatic                        0x00000b9d   Thumb Code    48  task.o(.text.xTaskCreateStatic)
    xTaskIncrementTick                       0x00000bcd   Thumb Code   212  task.o(.text.xTaskIncrementTick)
    Region$$Table$$Base                      0x00000cf0   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00000d10   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_armcm3.o(.data.SystemCoreClock)
    IdleTaskStack                            0x20000008   Data         512  task.o(.bss.IdleTaskStack)
    IdleTaskTCB                              0x20000208   Data          52  main.o(.bss.IdleTaskTCB)
    Task1Stack                               0x2000023c   Data         512  main.o(.bss.Task1Stack)
    Task1TCB                                 0x2000043c   Data          52  main.o(.bss.Task1TCB)
    Task1_Handle                             0x20000470   Data           4  main.o(.bss.Task1_Handle)
    Task2Stack                               0x20000474   Data         512  main.o(.bss.Task2Stack)
    Task2TCB                                 0x20000674   Data          52  main.o(.bss.Task2TCB)
    Task2_Handle                             0x200006a8   Data           4  main.o(.bss.Task2_Handle)
    flag1                                    0x200006ac   Data           1  main.o(.bss.flag1)
    flag2                                    0x200006ad   Data           1  main.o(.bss.flag2)
    pxCurrentTCB                             0x200006b0   Data           4  task.o(.bss.pxCurrentTCB)
    pxReadyTasksLists                        0x200006bc   Data         100  task.o(.bss.pxReadyTasksLists)
    xIdleTaskHandle                          0x20000750   Data           4  main.o(.bss.xIdleTaskHandle)
    xTickCount                               0x2000075c   Data           4  port.o(.bss.xTickCount)
    Image$$ARM_LIB_STACK$$ZI$$Limit          0x2001e000   Number         0  anon$$obj.o ABSOLUTE



==============================================================================

Memory Map of the image

  Image Entry point : 0x000003c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00000d18, Max: 0x00040000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00000d10, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000003c0   Data   RO          150    RESET               startup_armcm3.o
    0x000003c0   0x000003c0   0x00000008   Code   RO          173  * !!!main             c_w.l(__main.o)
    0x000003c8   0x000003c8   0x00000034   Code   RO          353    !!!scatter          c_w.l(__scatter.o)
    0x000003fc   0x000003fc   0x0000001a   Code   RO          355    !!handler_copy      c_w.l(__scatter_copy.o)
    0x00000416   0x00000416   0x00000002   PAD
    0x00000418   0x00000418   0x0000001c   Code   RO          357    !!handler_zi        c_w.l(__scatter_zi.o)
    0x00000434   0x00000434   0x00000002   Code   RO          230    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x00000436   0x00000436   0x00000000   Code   RO          245    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          247    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          250    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          252    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          254    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          257    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          259    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          261    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          263    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          265    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          267    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          269    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          271    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          273    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          275    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          277    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          281    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          283    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          285    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000000   Code   RO          287    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x00000436   0x00000436   0x00000002   Code   RO          288    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x00000438   0x00000438   0x00000002   Code   RO          324    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0000043a   0x0000043a   0x00000000   Code   RO          336    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0000043a   0x0000043a   0x00000000   Code   RO          338    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0000043a   0x0000043a   0x00000000   Code   RO          341    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0000043a   0x0000043a   0x00000000   Code   RO          344    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0000043a   0x0000043a   0x00000000   Code   RO          346    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0000043a   0x0000043a   0x00000000   Code   RO          349    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0000043a   0x0000043a   0x00000002   Code   RO          350    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0000043c   0x0000043c   0x00000000   Code   RO          175    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0000043c   0x0000043c   0x00000000   Code   RO          189    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0000043c   0x0000043c   0x00000004   Code   RO          203    .ARM.Collect$$rtentry$$00000007  c_w.l(__rtentry7.o)
    0x00000440   0x00000440   0x00000000   Code   RO          191    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x00000440   0x00000440   0x00000004   Code   RO          192    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x00000444   0x00000444   0x00000000   Code   RO          194    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x00000444   0x00000444   0x00000008   Code   RO          195    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0000044c   0x0000044c   0x00000004   Code   RO          204    .ARM.Collect$$rtentry$$00002718  c_w.l(__rtentry7.o)
    0x00000450   0x00000450   0x00000002   Code   RO          238    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000452   0x00000452   0x00000000   Code   RO          290    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000452   0x00000452   0x00000004   Code   RO          291    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000456   0x00000456   0x00000006   Code   RO          292    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000045c   0x0000045c   0x00000080   Code   RO          171    .text               c_w.l(assert.o)
    0x000004dc   0x000004dc   0x00000016   Code   RO          176    .text               c_w.l(abort.o)
    0x000004f2   0x000004f2   0x00000014   Code   RO          178    .text               c_w.l(assert_puts.o)
    0x00000506   0x00000506   0x0000000e   Code   RO          180    .text               c_w.l(sys_wrch.o)
    0x00000514   0x00000514   0x0000000c   Code   RO          182    .text               c_w.l(sys_exit.o)
    0x00000520   0x00000520   0x0000000e   Code   RO          208    .text               c_w.l(defsig_abrt_outer.o)
    0x0000052e   0x0000052e   0x00000002   Code   RO          212    .text               c_w.l(use_no_semi.o)
    0x00000530   0x00000530   0x00000000   Code   RO          214    .text               c_w.l(indicate_semi.o)
    0x00000530   0x00000530   0x00000012   Code   RO          219    .text               c_w.l(exit.o)
    0x00000542   0x00000542   0x0000000a   Code   RO          221    .text               c_w.l(defsig_exit.o)
    0x0000054c   0x0000054c   0x00000030   Code   RO          223    .text               c_w.l(defsig_abrt_inner.o)
    0x0000057c   0x0000057c   0x00000032   Code   RO          242    .text               c_w.l(defsig_general.o)
    0x000005ae   0x000005ae   0x00000002   PAD
    0x000005b0   0x000005b0   0x00000002   Code   RO          144    .text.Default_Handler  startup_armcm3.o
    0x000005b2   0x000005b2   0x00000002   PAD
    0x000005b4   0x000005b4   0x00000002   Code   RO          148    .text.HardFault_Handler  startup_armcm3.o
    0x000005b6   0x000005b6   0x00000002   PAD
    0x000005b8   0x000005b8   0x00000050   Code   RO           15    .text.PendSV_Handler  port.o
    0x00000608   0x00000608   0x00000008   Code   RO          146    .text.Reset_Handler  startup_armcm3.o
    0x00000610   0x00000610   0x00000028   Code   RO            5    .text.SVC_Handler   port.o
    0x00000638   0x00000638   0x00000010   Code   RO           25    .text.SysTick_Handler  port.o
    0x00000648   0x00000648   0x00000026   Code   RO          160    .text.SystemInit    system_armcm3.o
    0x0000066e   0x0000066e   0x00000002   PAD
    0x00000670   0x00000670   0x0000001e   Code   RO           54    .text.Task1_Entry   main.o
    0x0000068e   0x0000068e   0x00000002   PAD
    0x00000690   0x00000690   0x0000001e   Code   RO           56    .text.Task2_Entry   main.o
    0x000006ae   0x000006ae   0x00000002   PAD
    0x000006b0   0x000006b0   0x0000008c   Code   RO           52    .text.main          main.o
    0x0000073c   0x0000073c   0x00000076   Code   RO          119    .text.prvAddCurrentTaskToDelayedList  task.o
    0x000007b2   0x000007b2   0x00000002   PAD
    0x000007b4   0x000007b4   0x0000006a   Code   RO          111    .text.prvAddNewTaskToReadyList  task.o
    0x0000081e   0x0000081e   0x00000002   PAD
    0x00000820   0x00000820   0x00000002   Code   RO          107    .text.prvIdleTask   task.o
    0x00000822   0x00000822   0x00000002   PAD
    0x00000824   0x00000824   0x00000064   Code   RO          109    .text.prvInitialiseNewTask  task.o
    0x00000888   0x00000888   0x0000004a   Code   RO           99    .text.prvInitialiseTaskLists  task.o
    0x000008d2   0x000008d2   0x00000002   PAD
    0x000008d4   0x000008d4   0x00000028   Code   RO          123    .text.prvResetNextTaskUnblockTime  task.o
    0x000008fc   0x000008fc   0x00000024   Code   RO            3    .text.prvStartFirstTask  port.o
    0x00000920   0x00000920   0x00000002   Code   RO            9    .text.prvTaskExitError  port.o
    0x00000922   0x00000922   0x00000002   PAD
    0x00000924   0x00000924   0x00000020   Code   RO            7    .text.pxPortInitialiseStack  port.o
    0x00000944   0x00000944   0x0000001a   Code   RO          103    .text.vApplicationGetIdleTaskMemory  task.o
    0x0000095e   0x0000095e   0x00000002   PAD
    0x00000960   0x00000960   0x00000024   Code   RO           89    .text.vListDelet    list.o
    0x00000984   0x00000984   0x00000014   Code   RO           83    .text.vListInitialise  list.o
    0x00000998   0x00000998   0x00000006   Code   RO           81    .text.vListInitialistItem  list.o
    0x0000099e   0x0000099e   0x00000002   PAD
    0x000009a0   0x000009a0   0x00000040   Code   RO           87    .text.vListInsert   list.o
    0x000009e0   0x000009e0   0x0000001a   Code   RO           85    .text.vListInsertEnd  list.o
    0x000009fa   0x000009fa   0x00000002   PAD
    0x000009fc   0x000009fc   0x0000003e   Code   RO           17    .text.vPortEnterCritical  port.o
    0x00000a3a   0x00000a3a   0x00000002   PAD
    0x00000a3c   0x00000a3c   0x00000040   Code   RO           21    .text.vPortExitCritical  port.o
    0x00000a7c   0x00000a7c   0x00000010   Code   RO           19    .text.vPortRaiseBASEPRI  port.o
    0x00000a8c   0x00000a8c   0x00000008   Code   RO           23    .text.vPortSetBASEPRI  port.o
    0x00000a94   0x00000a94   0x00000018   Code   RO           13    .text.vPortSetupTimeInterrupt  port.o
    0x00000aac   0x00000aac   0x0000001e   Code   RO          117    .text.vTaskDelay    task.o
    0x00000aca   0x00000aca   0x00000002   PAD
    0x00000acc   0x00000acc   0x00000064   Code   RO          101    .text.vTaskStartScheduler  task.o
    0x00000b30   0x00000b30   0x00000044   Code   RO          113    .text.vTaskSwitchContext  task.o
    0x00000b74   0x00000b74   0x00000026   Code   RO           11    .text.xPortStartScheduler  port.o
    0x00000b9a   0x00000b9a   0x00000002   PAD
    0x00000b9c   0x00000b9c   0x00000030   Code   RO          105    .text.xTaskCreateStatic  task.o
    0x00000bcc   0x00000bcc   0x000000d4   Code   RO          121    .text.xTaskIncrementTick  task.o
    0x00000ca0   0x00000ca0   0x0000004e   Data   RO           31    .rodata.str1.1      port.o
    0x00000cee   0x00000cee   0x00000002   PAD
    0x00000cf0   0x00000cf0   0x00000020   Data   RO          352    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00000d10, Size: 0x00000760, Max: 0x0001e000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000d10   0x00000004   Data   RW          162    .data.SystemCoreClock  system_armcm3.o
    0x20000004   0x00000d14   0x00000004   Data   RW           30    .data.uxCriticalNesting  port.o
    0x20000008        -       0x00000200   Zero   RW          133    .bss.IdleTaskStack  task.o
    0x20000208        -       0x00000034   Zero   RW           72    .bss.IdleTaskTCB    main.o
    0x2000023c        -       0x00000200   Zero   RW           61    .bss.Task1Stack     main.o
    0x2000043c        -       0x00000034   Zero   RW           62    .bss.Task1TCB       main.o
    0x20000470        -       0x00000004   Zero   RW           63    .bss.Task1_Handle   main.o
    0x20000474        -       0x00000200   Zero   RW           64    .bss.Task2Stack     main.o
    0x20000674        -       0x00000034   Zero   RW           65    .bss.Task2TCB       main.o
    0x200006a8        -       0x00000004   Zero   RW           66    .bss.Task2_Handle   main.o
    0x200006ac        -       0x00000001   Zero   RW           59    .bss.flag1          main.o
    0x200006ad        -       0x00000001   Zero   RW           60    .bss.flag2          main.o
    0x200006ae   0x00000d18   0x00000002   PAD
    0x200006b0        -       0x00000004   Zero   RW          132    .bss.pxCurrentTCB   task.o
    0x200006b4        -       0x00000004   Zero   RW          128    .bss.pxDelayedTaskList  task.o
    0x200006b8        -       0x00000004   Zero   RW          129    .bss.pxOverflowDelayedTaskList  task.o
    0x200006bc        -       0x00000064   Zero   RW          125    .bss.pxReadyTasksLists  task.o
    0x20000720        -       0x00000004   Zero   RW          135    .bss.uxCurrentNumberOfTasks  task.o
    0x20000724        -       0x00000004   Zero   RW          131    .bss.uxTopReadyPriority  task.o
    0x20000728        -       0x00000014   Zero   RW          126    .bss.xDelayedTaskList1  task.o
    0x2000073c        -       0x00000014   Zero   RW          127    .bss.xDelayedTaskList2  task.o
    0x20000750        -       0x00000004   Zero   RW           71    .bss.xIdleTaskHandle  main.o
    0x20000754        -       0x00000004   Zero   RW          130    .bss.xNextTaskUnblockTime  task.o
    0x20000758        -       0x00000004   Zero   RW          134    .bss.xNumOfOverflows  task.o
    0x2000075c        -       0x00000004   Zero   RW           29    .bss.xTickCount     port.o


    Execution Region ARM_LIB_STACK (Exec base: 0x2001c000, Load base: 0x00000d18, Size: 0x00002000, Max: 0x00002000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2001c000        -       0x00002000   Zero   RW            1    ARM_LIB_STACK.bss   anon$$obj.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       152          0          0          0          0       1840   list.o
       200         16          0          0       1194       2617   main.o
       418         32         78          4          4       2488   port.o
        12          0        960          0          0        846   startup_armcm3.o
        38          0          0          4          0       1361   system_armcm3.o
       924          8          0          0        680       5991   task.o

    ----------------------------------------------------------------------
      1776         56       1072          8      10072      15143   Object Totals
         0          0         32          0       8192          0   (incl. Generated)
        32          0          2          0          2          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         8          4          0          0          0          0   __rtentry7.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        22          0          0          0          0         80   abort.o
       128         42          0          0          0         76   assert.o
        20          0          0          0          0         76   assert_puts.o
        48         34          0          0          0         76   defsig_abrt_inner.o
        14          0          0          0          0         80   defsig_abrt_outer.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        18          0          0          0          0         80   exit.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        14          0          0          0          0         76   sys_wrch.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       496         92          0          0          0        904   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       492         92          0          0          0        904   c_w.l

    ----------------------------------------------------------------------
       496         92          0          0          0        904   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      2272        148       1072          8      10072      15631   Grand Totals
      2272        148       1072          8      10072      15631   ELF Image Totals
      2272        148       1072          8          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 3344 (   3.27kB)
    Total RW  Size (RW Data + ZI Data)             10080 (   9.84kB)
    Total ROM Size (Code + RO Data + RW Data)       3352 (   3.27kB)

==============================================================================

